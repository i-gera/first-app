{"version":3,"sources":["components/Login.jsx"],"names":["maxLength15","maxLengthCreator","maxLength20","LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","fieldCreator","Input","required","type","error","className","style","borderError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"wGAAA,6FASMA,EAAcC,YAAiB,IAC/BC,EAAcD,YAAiB,IAgDjCE,EAAiBC,YAAU,CAE7BC,KAAM,SAFaD,EA9CH,SAACE,GACjB,OACE,0BAAMC,SAAUD,EAAME,cACnBC,YAAaC,IAAO,QAAS,QAAS,CAACC,IAAUT,IACjDO,YAAaC,IAAO,WAAY,WAAY,CAACC,IAAUX,GAAc,CACpEY,KAAM,aAEPH,YACCC,IACA,aACA,KACA,KACA,CACEE,KAAM,YAER,eAuBDN,EAAMO,OAAS,yBAAKC,UAAWC,IAAMC,aAAcV,EAAMO,OAC1D,6BACE,4BAAQD,KAAK,UAAb,gBAgCOK,uBALS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,KAAKD,UAGiB,CAAEE,WAA3BJ,EArBH,SAACX,GAKX,OAAIA,EAAMa,OACD,kBAAC,IAAD,CAAUG,GAAG,aAGpB,6BACE,iEACA,kBAACnB,EAAD,CAAgBI,SAVH,SAACgB,GAChBjB,EAAMe,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.c0570a1c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Input, fieldCreator } from \"./common/FormControls\";\r\nimport { required, maxLengthCreator } from \"./../utils/validators/validator\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../redux/reducers/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport style from \"./common/FormControls.module.css\";\r\n\r\nconst maxLength15 = maxLengthCreator(15);\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      {fieldCreator(Input, \"email\", \"Email\", [required, maxLength20])}\r\n      {fieldCreator(Input, \"password\", \"Password\", [required, maxLength15], {\r\n        type: \"password\",\r\n      })}\r\n      {fieldCreator(\r\n        Input,\r\n        \"rememberMe\",\r\n        null,\r\n        null,\r\n        {\r\n          type: \"checkbox\",\r\n        },\r\n        \"remember me\"\r\n      )}\r\n      {/* <div>\r\n        <Field\r\n          component={Input}\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          validate={[required, maxLength20]}\r\n        />\r\n      </div> */}\r\n      {/* <div>\r\n        <Field\r\n          component={Input}\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          validate={[required, maxLength15]}\r\n          type=\"password\"\r\n        />\r\n      </div> */}\r\n      {/* <div>\r\n        <Field component={Input} name=\"rememberMe\" type=\"checkbox\" /> remember\r\n        me\r\n      </div> */}\r\n      {props.error && <div className={style.borderError}>{props.error}</div>}\r\n      <div>\r\n        <button type=\"submit\">sign in</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet LoginReduxForm = reduxForm({\r\n  // a unique name for the form\r\n  form: \"login\",\r\n})(LoginForm);\r\n\r\nlet Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Please, sign in for using network</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { login })(Login);\r\n"],"sourceRoot":""}